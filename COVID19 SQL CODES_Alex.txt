SELECT count(*) FROM [dbo].[CovidDeath] 	WHERE [continent] is not null

SELECT * FROM [dbo].[CovidVaccination]

SELECT * FROM [dbo].[CovidDeath]
ORDER BY 3,4

--Selecting the data we are going to be use
SELECT
	[location],
	[date],
	[total_cases],
	[new_cases],
	[total_deaths],
	[population]
FROM
	[dbo].[CovidDeath]
ORDER BY 1,2

--Looking at Total Cases vs Deaths
--Looking at the death percentage in Nigeria
SELECT
	[location],
	[date],
	[total_cases],
	[total_deaths],
	([total_deaths]/[total_cases])*100 DeathPercentage

FROM
	[dbo].[CovidDeath]
WHERE [location] LIKE '%Nige%'
ORDER BY 1,2


--Looking at the Total cases vs population
--Shows what percentage of population got Covid
SELECT
	[location],
	[date],[population],
	[total_cases],
	([total_cases]/[population])*100 CasesPercentage

FROM
	[dbo].[CovidDeath]
	WHERE [continent] is not null

ORDER BY 1,3 Desc

--Looking at countries with higest infection rate compared to population
SELECT
	[location],[population],
	MAX([total_cases]) AS HighestInfectionCount,
	([total_cases]/[population])*100 PercentagePoulationInfected

FROM
	[dbo].[CovidDeath]
	WHERE [continent] is not null

GROUP BY
	[location],[population],[total_cases]
ORDER BY 1,3 Desc

select [location],[population],[total_cases],
	MAX([total_cases]) over (partition by [location])
	FROM
	[dbo].[CovidDeath]
		WHERE [continent] is not null

order by 3 desc


--Looking at the countries with highest infection rate compared to population
select [location],[population],
	MAX([total_cases]) HighestInfectionCount,
	MAX(([total_cases]/[population])*100) HighestInfectionRate
	FROM
	[dbo].[CovidDeath]
	WHERE [continent] is not null
	GROUP BY
		[location],[population]
order by 4 desc

--Looking at locations with highest death
select [location],
	MAX(CAST([total_deaths] AS int)) HighesDeath
	FROM
	[dbo].[CovidDeath]
	WHERE [continent] is not null
	GROUP BY
		[location]
	ORDER BY 2 DESC


--Looking at Continents with highest death
select [location],
	MAX(CAST([total_deaths] AS int)) TotalDeathCount
	FROM
	[dbo].[CovidDeath]
	WHERE [continent] is null
	GROUP BY
		[location]
	ORDER BY 2 DESC

--Showing the continents with the highest death count per population
select [continent],
	MAX(CAST([total_deaths] AS int)) TotalDeathCount
	FROM
	[dbo].[CovidDeath]
	WHERE [continent] is  not null
	GROUP BY
		[continent]
	ORDER BY 2 DESC

--Global numbers
SELECT  SUM([new_cases]) Total_NewCases, SUM(CAST([new_deaths] AS int)) Total_NewDeath,
	SUM(CAST([new_deaths] AS int)) /SUM([new_cases])*100 DeathPercentage
FROM [dbo].[CovidDeath]
WHERE [continent] is  not null
ORDER BY 1,2


--Global numbers by date
SELECT [date], SUM([new_cases]) Total_NewCases, SUM(CAST([new_deaths] AS int)) Total_NewDeath,
	SUM(CAST([new_deaths] AS int)) /SUM([new_cases])*100 DeathPercentage
FROM [dbo].[CovidDeath]
WHERE [continent] is  not null
GROUP BY [date]
ORDER BY 1,2


--Looking at the Vaccination table
SELECT * FROM [dbo].[CovidVaccination]


--Joining the Covid Death table and Covid Vaccination table by date and location
SELECT *
FROM [dbo].[CovidDeath] death
INNER JOIN [dbo].[CovidVaccination] vacc
ON death.location	= vacc.location and
death.date = vacc.date


--Looking at Toal Population vs Vaccinations
SELECT death.continent,death.location,death.date,death.population,vacc.new_vaccinations,
	SUM(CONVERT(int,vacc.new_vaccinations)) OVER (Partition by death.location ORDER BY death.location,death.date) RollingCount
FROM [dbo].[CovidDeath] death
INNER JOIN [dbo].[CovidVaccination] vacc
ON death.location	= vacc.location and
death.date = vacc.date 
WHERE death.continent is not null and vacc.new_vaccinations is not null
ORDER BY 2,3

--Using Common Table Expressions (CTE)
With PopVsVacc (Continents, Location, Date, Population, Vaccination, RollingPeopleVaccinated)
AS
(
SELECT death.continent,death.location,death.date,death.population,vacc.new_vaccinations,
	SUM(CONVERT(int,vacc.new_vaccinations)) OVER (Partition by death.location ORDER BY death.location,death.date) RollingCount
FROM [dbo].[CovidDeath] death
INNER JOIN [dbo].[CovidVaccination] vacc
ON death.location	= vacc.location and
death.date = vacc.date 
WHERE death.continent is not null and vacc.new_vaccinations is not null
--ORDER BY 2,3
)
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopVsVacc

--Using Temp Table
DROP TABLE if exists #PercentPopulationVaccinated

CREATE TABLE #PercentPopulationVaccinated
(
	Continents nvarchar(255), Location nvarchar(255),
	Date datetime, Population numeric,
	NewVaccination nvarchar(255), RollingPeopleVaccinated numeric)

INSERT INTO #PercentPopulationVaccinated

SELECT death.continent,death.location,death.date,death.population,vacc.new_vaccinations,
	SUM(CONVERT(int,vacc.new_vaccinations)) OVER (Partition by death.location ORDER BY death.location,death.date) RollingCount
FROM [dbo].[CovidDeath] death
INNER JOIN [dbo].[CovidVaccination] vacc
ON death.location	= vacc.location and
death.date = vacc.date 
WHERE death.continent is not null
--ORDER BY 2,3
SELECT *
FROM #PercentPopulationVaccinated

--Creating a view 
CREATE VIEW PercentPopulationVaccinated AS

SELECT death.continent,death.location,death.date,death.population,vacc.new_vaccinations,
	SUM(CONVERT(int,vacc.new_vaccinations)) OVER (Partition by death.location ORDER BY death.location,death.date) RollingCount
FROM [dbo].[CovidDeath] death
INNER JOIN [dbo].[CovidVaccination] vacc
ON death.location	= vacc.location and
death.date = vacc.date 
WHERE death.continent is not null
